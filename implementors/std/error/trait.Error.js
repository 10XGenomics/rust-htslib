(function() {var implementors = {};
implementors["rust_htslib"] = ["impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/pileup/enum.PileupError.html' title='rust_htslib::bam::pileup::PileupError'>PileupError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/enum.ReadError.html' title='rust_htslib::bam::ReadError'>ReadError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/enum.IndexError.html' title='rust_htslib::bam::IndexError'>IndexError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/enum.BGZFError.html' title='rust_htslib::bam::BGZFError'>BGZFError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/enum.WriteError.html' title='rust_htslib::bam::WriteError'>WriteError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bam/enum.SeekError.html' title='rust_htslib::bam::SeekError'>SeekError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/record/enum.InfoReadError.html' title='rust_htslib::bcf::record::InfoReadError'>InfoReadError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/record/enum.FormatReadError.html' title='rust_htslib::bcf::record::FormatReadError'>FormatReadError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/record/enum.TagWriteError.html' title='rust_htslib::bcf::record::TagWriteError'>TagWriteError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/record/enum.TrimAllelesError.html' title='rust_htslib::bcf::record::TrimAllelesError'>TrimAllelesError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/header/enum.RidError.html' title='rust_htslib::bcf::header::RidError'>RidError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/header/enum.SubsetError.html' title='rust_htslib::bcf::header::SubsetError'>SubsetError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/header/enum.TagTypeError.html' title='rust_htslib::bcf::header::TagTypeError'>TagTypeError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/enum.BCFError.html' title='rust_htslib::bcf::BCFError'>BCFError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/enum.ReadError.html' title='rust_htslib::bcf::ReadError'>ReadError</a>","impl <a class='trait' href='https://doc.rust-lang.org/nightly/std/error/trait.Error.html' title='std::error::Error'>Error</a> for <a class='enum' href='rust_htslib/bcf/enum.WriteError.html' title='rust_htslib::bcf::WriteError'>WriteError</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
